# gesture_handler.py
import time
from config import VIDEO_SOURCE_NAME, SWIPE_LEFT_SCENE, SWIPE_RIGHT_SCENE

# G√®re les actions √† effectuer selon le geste d√©tect√©
def handle_gesture(gesture, ws, last_action, gesture_cooldown):
    current_time = time.time()
    
    # V√©rification du cooldown et de la connexion OBS
    if not ws or (last_action is not None and current_time - last_action < gesture_cooldown):
        return last_action

    action_taken = False
    new_scene_name = None
    action_description = ""

    # Gestion des gestes avec changement de sc√®ne
    if gesture == "SWIPE_LEFT":
        new_scene_name = SWIPE_LEFT_SCENE
        action_description = f"Changement vers {SWIPE_LEFT_SCENE} via swipe gauche"
    elif gesture == "SWIPE_RIGHT":
        new_scene_name = SWIPE_RIGHT_SCENE
        action_description = f"Changement vers {SWIPE_RIGHT_SCENE} via swipe droit"
        
    elif gesture == "THUMB_UP":
        try:
            # M√©thode correcte pour red√©marrer/jouer une vid√©o
            ws.trigger_media_input_action(VIDEO_SOURCE_NAME, "OBS_WEBSOCKET_MEDIA_INPUT_ACTION_RESTART")
            print("‚úì Action OBS: Lecture vid√©o")
            action_taken = True
            action_description = "Red√©marrage de la vid√©o"
        except Exception as e:
            try:
                # Essai avec une action alternative
                ws.trigger_media_input_action(VIDEO_SOURCE_NAME, "restart")
                print("‚úì Action OBS: Lecture vid√©o (restart)")
                action_taken = True
                action_description = "Red√©marrage de la vid√©o"
            except Exception as e2:
                print(f"‚ùå Erreur OBS (RestartMedia): {e2}")

    elif gesture == "PEACE":
        print("‚úåÔ∏è Geste de paix d√©tect√©. Aucune action OBS.")
    elif gesture == "THUMB_DOWN":
        print("üëé Geste de pouce vers le bas d√©tect√©. Aucune action OBS.")
    elif gesture == "THUMB_LEFT":
        print("üëà Geste de pouce vers la gauche d√©tect√©. Aucune action OBS.")
    elif gesture == "THUMB_RIGHT":
        print("üëâ Geste de pouce vers la droite d√©tect√©. Aucune action OBS.")
    elif gesture == "FIST":
        print("‚úä Geste de poing ferm√© d√©tect√©. Aucune action OBS.")
    elif gesture == "OPEN_HAND":
        print("‚úã Geste de main ouverte d√©tect√©. Aucune action OBS.")
    elif gesture == "WAVE":
        print("üëã Geste de vague d√©tect√©. Aucune action OBS.")
    elif gesture == "OK":
        print("üëå Geste OK d√©tect√©. Aucune action OBS.")

    # Ex√©cution des changements de sc√®ne
    if new_scene_name:
        try:
            ws.set_current_program_scene(new_scene_name)
            print(f"‚úì Action OBS: Changement vers la sc√®ne {new_scene_name}")
            action_taken = True
        except Exception as e:
            print(f"‚ùå Erreur OBS (SetCurrentScene): {e}")
    
    # Retour avec timestamp si action effectu√©e
    if action_taken:
        timestamp = time.strftime('%H:%M:%S', time.localtime(current_time))

        print(f"‚úì Action OBS faite le {timestamp}: {action_description}")
        return current_time    
    return last_action
